name: Create Release & Push Package
on:
  push:
    tags: 
      - v*

env:
  SKIP_PREFLIGHT_CHECK: true

jobs:
  build-deploy:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Generate changelog
      id: changelog
      uses: jaywcjlove/changelog-generator@v1.3.10
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        filter-author: (jaywcjlove|小弟调调™|dependabot\[bot\]|Renovate Bot)
        filter: (^[\s]+?[R|r]elease)|(^[R|r]elease)

    - run: npm install
    - run: npm run hoist

    # - run: npm run build
    - run: npm run b:uiw
    - run: npm run b:css
    - run: npm run type

    - run: npm run coverage

    - run: |
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        COMMIT=released-${VERSION}
 
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        echo "version: $VERSION"
        export VERSION

        node node_modules/.bin/lerna version $VERSION --no-changelog --no-git-tag-version --no-push --yes --force-publish
        npm run b:website
        npm run b:doc
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .

        git commit -am $COMMIT

    - name: git push master
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      uses: ncipollo/release-action@v1
      if: steps.create_tag.outputs.successful
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        name: ${{ steps.create_tag.outputs.version }}
        tag: ${{ steps.create_tag.outputs.version }}
        body: |
          [![](https://img.shields.io/badge/Open%20in-unpkg-blue)](https://uiwjs.github.io/npm-unpkg/#/pkg/uiw@${{steps.create_tag.outputs.versionNumber}}/file/README.md) [![npm bundle size](https://img.shields.io/bundlephobia/minzip/uiw)](https://bundlephobia.com/result?p=uiw@${{steps.create_tag.outputs.versionNumber}}) [![npm version](https://img.shields.io/npm/v/uiw.svg)](https://www.npmjs.com/package/uiw)
          
          ```bash
          npm i uiw@${{steps.create_tag.outputs.versionNumber}}
          ```

          ${{ steps.changelog.outputs.compareurl }}
          ${{ steps.changelog.outputs.changelog }}

    - run: npm run bundle
    - run: git checkout -f packages/uiw/tsconfig.json
    - name: npm publish
      run: npm run u:publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Deploy to uiwjs.github.io
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.PERSONAL_TOKEN_UIW }}
        publish_dir: ./website/uiw/build
        publish_branch: master
        external_repository: uiwjs/uiwjs.github.io

    - name: Build and Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
        publish_branch: gh-pages
        publish_dir: ./website/uiw/build
        cname: uiw.js.cool

    - name: Sync to Gitee
      run: |
        mirror() {
          git clone "https://github.com/$1/$2"
          cd "$2"
          git remote add gitee "https://jaywcjlove:${{ secrets.GITEE_TOKEN }}@gitee.com/uiw/$2.git"
          git remote set-head origin -d
          git push gitee --prune +refs/remotes/origin/*:refs/heads/* +refs/tags/*:refs/tags/*
          cd ..
        }
        mirror uiwjs uiw